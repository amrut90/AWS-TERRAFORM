provider "aws" {
  access_key = "*************"
  secret_key = "******************************"
  region     = "****************"
}
resource "aws_iam_user" "user" {
  name = "test-user"
  path ="/system/"
}
resource "aws_iam_user_login_profile" "login" {
#  count = "${var.enabled == "true" && var.login_profile_enabled == "true" ? 1 : 0}"

  user                    = "${aws_iam_user.user.name}"
  pgp_key                 = "keybase:username"
#  password_length         = "${var.password_length}"
#  password_reset_required = "${var.password_reset_required}"
  depends_on              = ["aws_iam_user.user"]
}
output "password" {
  value = "${aws_iam_user_login_profile.login.encrypted_password}"
}

resource "aws_iam_group" "group" {
  name = "test-group"
}

resource "aws_iam_user_group_membership" "group" {
  #count      = "${var.enabled == "true" && length(var.groups) > 0 ? 1 : 0}"
  user       = "${aws_iam_user.user.name}"
  groups     = ["${aws_iam_group.group.name}"]
  depends_on = ["aws_iam_user.user"]
}
resource "aws_iam_access_key" "key" {
  user  = "${aws_iam_user.user.name}"
}

resource "aws_iam_role" "role" {
  name = "test-role"

  assume_role_policy = <<EOF
    {
      "Version": "2012-10-17",
      "Statement": [
            {
     "Sid": "",
     "Effect": "Allow",
     "Principal": {
       "Service": [
         "ec2.amazonaws.com"
       ]
     },
     "Action": "sts:AssumeRole"
   }
 ]
    }
EOF
}

#  {
#    "Action": "sts:AssumeRole",
#    "Principal": {
#      "Service": "ec2.amazonaws.com"
#    },
#    "Effect": "Allow",
#    "Sid": ""
#  }
#]

resource "aws_iam_policy" "policy" {
  name        = "test-policy"
  description = "A test policy"

  policy = <<EOF
{
  "Version": "2012-10-17",
  "Statement": [
    {
      "Action": [
        "ec2:Describe*"
      ],
      "Effect": "Allow",
      "Resource": "*"
    }
  ]
}
EOF
}

resource "aws_iam_role_policy_attachment" "test-attach" {
  role       = "${aws_iam_role.role.name}"
  #user      = "${aws_iam_user.user.name}"
 #role      = "${aws_iam_role.role.name}"
# group     = "${aws_iam_group.group.name}"
  policy_arn = "${aws_iam_policy.policy.arn}"
}
